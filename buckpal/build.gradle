import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias libs.plugins.jetbrains.kotlin.jvm
    alias libs.plugins.google.devtools.ksp
    id "groovy"
    alias libs.plugins.netflix.nebula.facet
    id "idea"
    alias libs.plugins.micronaut.library
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
}

repositories {
    mavenCentral()
}

facets {
    domain
    domainTest {
        parentSourceSet = "test"
    }
    application
    applicationTest {
        parentSourceSet = "test"
    }
    inboundRest
    inboundRestTest {
        parentSourceSet = "test"
    }
    outboundPersistence
    outboundPersistenceTest {
        parentSourceSet = "test"
    }
}

dependencies {
    ksp("io.micronaut.data:micronaut-data-processor")

    testImplementation libs.kotlin.test
    testImplementation libs.spock.core
    testImplementation libs.kotlinx.coroutines.core
    testRuntimeOnly libs.byte.buddy
    testRuntimeOnly libs.objenesis
    testRuntimeOnly libs.logback.classic

    domainTestImplementation sourceSets.domain.output

    applicationImplementation sourceSets.domain.output
    applicationImplementation libs.javax.transaction.api
    applicationTestImplementation sourceSets.domain.output
    applicationTestImplementation sourceSets.application.output

    inboundRestImplementation sourceSets.domain.output
    inboundRestImplementation sourceSets.application.output
    inboundRestImplementation libs.micronaut.http.server.netty
    inboundRestImplementation libs.micronaut.jackson.databind
    inboundRestTestImplementation sourceSets.domain.output
    inboundRestTestImplementation sourceSets.application.output
    inboundRestTestImplementation libs.micronaut.http.client
    inboundRestTestRuntimeOnly sourceSets.inboundRest.output
    inboundRestTestRuntimeOnly libs.micronaut.http.server.netty
    inboundRestTestRuntimeOnly libs.micronaut.jackson.databind

    outboundPersistenceImplementation sourceSets.domain.output
    outboundPersistenceImplementation sourceSets.application.output
    outboundPersistenceImplementation libs.micronaut.data.r2dbc
    outboundPersistenceImplementation libs.jakarta.persistence.api
    outboundPersistenceImplementation libs.kotlinx.coroutines.core
    outboundPersistenceTestImplementation sourceSets.domain.output
    outboundPersistenceTestImplementation sourceSets.application.output
    outboundPersistenceTestImplementation sourceSets.outboundPersistence.output
    outboundPersistenceTestImplementation libs.micronaut.data.r2dbc
    outboundPersistenceTestRuntimeOnly libs.jakarta.persistence.api
}

configurations {
    buckpalJars {
        canBeConsumed = true
        canBeResolved = false
        extendsFrom domainImplementation, domainRuntimeOnly
        extendsFrom applicationImplementation, applicationRuntimeOnly
        extendsFrom inboundRestImplementation, inboundRestRuntimeOnly
        extendsFrom outboundPersistenceImplementation, outboundPersistenceRuntimeOnly
    }
}

tasks.register('buckpalJar', Jar) {
    from sourceSets.domain.output
    from sourceSets.application.output
    from sourceSets.inboundRest.output
    from sourceSets.outboundPersistence.output
}

artifacts {
    buckpalJars(buckpalJar)
}

tasks.named('compileKotlin', KotlinCompilationTask) {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_21
        javaParameters = true
    }
}
